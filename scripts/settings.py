# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'c:\Users\lolow\Desktop\.Toulouse\2023 2024\Stage\Projet\iPhyloGeo_plus_plus\scripts\Qt\params.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import yaml
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QPixmap
from PyQt5.QtWidgets import QLabel
from aphylogeo.params import Params, Params2

Params.load_from_file("params.yaml")
Params2.load_from_file("params_default.yaml")

class MyDumper(yaml.Dumper):
    def increase_indent(self, flow=False, indentless=False):
        return super(MyDumper, self).increase_indent(flow, False)

    def represent_list(self, data):
        return self.represent_sequence('tag:yaml.org,2002:seq', data, flow_style=True)

yaml.add_representer(list, MyDumper.represent_list, Dumper=MyDumper)

def update_yaml_param(params, file_path, property_name, new_value):
    if isinstance(new_value, list):
        new_value = [element.strip() for element in new_value]
    params.update_from_dict({property_name: new_value})

    with open(file_path, "r") as yaml_file:
        data = yaml.safe_load(yaml_file)

    if property_name in data:
        data[property_name] = new_value
    else:
        print(f"Warning: Property '{property_name}' not found in '{file_path}'.")

    with open(file_path, "w") as yaml_file:
        yaml.dump(data, yaml_file, default_flow_style=None, Dumper=MyDumper, sort_keys=False)


class HoverLabel(QLabel):
    def __init__(self, text, hover_text, text_edit, image_label, hover_image_path, *args, **kwargs):
        super().__init__(text, *args, **kwargs)
        self.default_text = text
        self.hover_text = hover_text
        self.text_edit = text_edit
        self.image_label = image_label
        self.hover_image_path = hover_image_path

    def enterEvent(self, event):
        self.text_edit.clear()
        self.image_label.clear()
        self.text_edit.setText(self.hover_text)
        self.image_label.setPixmap(QPixmap(self.hover_image_path))
        super().enterEvent(event)


    class Settings(object):
        def setupUi(self, Dialog):
            Dialog.setObjectName("Dialog")
            Dialog.resize(900, 540)
            sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
            sizePolicy.setHorizontalStretch(0)
            sizePolicy.setVerticalStretch(0)
            sizePolicy.setHeightForWidth(Dialog.sizePolicy().hasHeightForWidth())
            Dialog.setSizePolicy(sizePolicy)
            Dialog.setMinimumSize(QtCore.QSize(900, 500))
            Dialog.setMaximumSize(QtCore.QSize(900, 500))
            self.reset_button = QtWidgets.QPushButton(Dialog)
            self.reset_button.setGeometry(QtCore.QRect(250, 460, 120, 30))
            self.reset_button.setObjectName("reset_button")
            self.ok_button = QtWidgets.QPushButton(Dialog)
            self.ok_button.setGeometry(QtCore.QRect(390, 460, 120, 30))
            self.ok_button.setObjectName("ok_button")
            self.cancel_button = QtWidgets.QPushButton(Dialog)
            self.cancel_button.setGeometry(QtCore.QRect(530, 460, 120, 30))
            self.cancel_button.setObjectName("cancel_button")

            self.userParams = QtWidgets.QGroupBox(Dialog)
            self.userParams.setGeometry(QtCore.QRect(10, 10, 310, 431))
            sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
            sizePolicy.setHorizontalStretch(0)
            sizePolicy.setVerticalStretch(0)
            sizePolicy.setHeightForWidth(self.userParams.sizePolicy().hasHeightForWidth())
            self.userParams.setSizePolicy(sizePolicy)

            font = QtGui.QFont()
            font.setPointSize(11)
            self.userParams.setFont(font)
            self.userParams.setAlignment(QtCore.Qt.AlignCenter)
            self.userParams.setCheckable(False)
            self.userParams.setObjectName("userParams")

            self.gridLayout_2 = QtWidgets.QGridLayout(self.userParams)
            self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
            self.gridLayout_2.setSpacing(0)
            self.gridLayout_2.setObjectName("gridLayout_2")

            self.verticalLayout = QtWidgets.QVBoxLayout()
            self.verticalLayout.setSizeConstraint(QtWidgets.QLayout.SetNoConstraint)
            self.verticalLayout.setSpacing(0)
            self.verticalLayout.setObjectName("verticalLayout")

            self.paramsDetails = QtWidgets.QGroupBox(Dialog)
            self.paramsDetails.setGeometry(QtCore.QRect(320, 10, 572, 431))
            sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
            sizePolicy.setHorizontalStretch(0)
            sizePolicy.setVerticalStretch(0)
            sizePolicy.setHeightForWidth(self.paramsDetails.sizePolicy().hasHeightForWidth())
            self.paramsDetails.setSizePolicy(sizePolicy)

            font.setPointSize(11)
            self.paramsDetails.setFont(font)
            self.paramsDetails.setAlignment(QtCore.Qt.AlignCenter)
            self.paramsDetails.setCheckable(False)
            self.paramsDetails.setObjectName("paramsDetails")            
            group_box_layout = QtWidgets.QVBoxLayout()
            self.paramsDetails.setLayout(group_box_layout)
            HoverLabel.image_label = QLabel()
            HoverLabel.image_label.setFixedSize(540, 250)
            HoverLabel.image_label.setAlignment(Qt.AlignCenter)
            group_box_layout.addWidget(HoverLabel.image_label)

            self.textEdit = QtWidgets.QTextEdit(self.paramsDetails)
            group_box_layout.addWidget(self.textEdit)
            sizePolicy.setHorizontalStretch(0)
            sizePolicy.setVerticalStretch(0)
            sizePolicy.setHeightForWidth(self.textEdit.sizePolicy().hasHeightForWidth())
            self.textEdit.setSizePolicy(sizePolicy)
            self.textEdit.setMinimumSize(QtCore.QSize(540, 130))
            self.textEdit.setMaximumSize(QtCore.QSize(540, 130))
            font.setPointSize(8)
            self.textEdit.setFont(font)
            self.textEdit.setReadOnly(True)
            self.textEdit.setObjectName("textEdit")

            self.methodBox = QtWidgets.QGroupBox(self.userParams)
            sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
            sizePolicy.setHorizontalStretch(0)
            sizePolicy.setVerticalStretch(0)
            sizePolicy.setHeightForWidth(self.methodBox.sizePolicy().hasHeightForWidth())
            self.methodBox.setSizePolicy(sizePolicy)
            font.setPointSize(9)
            self.methodBox.setFont(font)
            self.methodBox.setLayoutDirection(QtCore.Qt.LeftToRight)
            self.methodBox.setAlignment(QtCore.Qt.AlignCenter)
            self.methodBox.setFlat(True)
            self.methodBox.setCheckable(False)
            self.methodBox.setObjectName("methodBox")
            self.verticalLayout.addWidget(self.methodBox)

            self.gridLayout_3 = QtWidgets.QGridLayout(self.methodBox)
            self.gridLayout_3.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
            self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
            self.gridLayout_3.setSpacing(0)
            self.gridLayout_3.setObjectName("gridLayout_3")
            font.setPointSize(8)

            self.metrics = HoverLabel("Distance method", "Three methods are available to modify the display of the results obtained : \nLeast Square : Approximation of the data values by using the square of the values and recalculating to get closer to the real data. \nRobinson & Foulds : Second method. \nEuclidian distance : Third method.", self.textEdit, HoverLabel.image_label, "../img/active/result.svg")
            self.metrics.setFont(font)
            self.metrics.setIndent(10)
            self.metrics.setObjectName("metrics")
            self.gridLayout_3.addWidget(self.metrics, 0, 0, 1, 1)

            self.comboBox_metrics = QtWidgets.QComboBox(self.methodBox)
            sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
            sizePolicy.setHorizontalStretch(0)
            sizePolicy.setVerticalStretch(0)
            sizePolicy.setHeightForWidth(self.comboBox_metrics.sizePolicy().hasHeightForWidth())
            self.comboBox_metrics.setSizePolicy(sizePolicy)
            font.setPointSize(8)
            self.comboBox_metrics.setFont(font)
            self.comboBox_metrics.setLayoutDirection(QtCore.Qt.LeftToRight)
            self.comboBox_metrics.setIconSize(QtCore.QSize(20, 20))
            self.comboBox_metrics.setFrame(True)
            self.comboBox_metrics.setObjectName("comboBox_metrics")
            self.comboBox_metrics.addItem("")
            self.comboBox_metrics.addItem("")
            self.comboBox_metrics.addItem("")
            self.gridLayout_3.addWidget(self.comboBox_metrics, 0, 1, 1, 1)

            self.thresholdBox = QtWidgets.QGroupBox(self.userParams)
            sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
            sizePolicy.setHorizontalStretch(0)
            sizePolicy.setVerticalStretch(0)
            sizePolicy.setHeightForWidth(self.thresholdBox.sizePolicy().hasHeightForWidth())
            self.thresholdBox.setSizePolicy(sizePolicy)
            font.setPointSize(9)
            self.thresholdBox.setFont(font)
            self.thresholdBox.setLayoutDirection(QtCore.Qt.LeftToRight)
            self.thresholdBox.setAlignment(QtCore.Qt.AlignCenter)
            self.thresholdBox.setFlat(True)
            self.thresholdBox.setCheckable(False)
            self.thresholdBox.setObjectName("thresholdBox")

            self.gridLayout_4 = QtWidgets.QGridLayout(self.thresholdBox)
            self.gridLayout_4.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
            self.gridLayout_4.setContentsMargins(0, 0, 0, 0)
            self.gridLayout_4.setSpacing(0)
            self.gridLayout_4.setObjectName("gridLayout_4")

            self.spinBox_bootstrap = QtWidgets.QSpinBox(self.thresholdBox)
            font.setPointSize(8)
            self.spinBox_bootstrap.setFont(font)
            self.spinBox_bootstrap.setMinimum(0)
            self.spinBox_bootstrap.setMaximum(1000)
            self.spinBox_bootstrap.setSingleStep(1)
            self.spinBox_bootstrap.setObjectName("spinBox_bootstrap")
            self.gridLayout_4.addWidget(self.spinBox_bootstrap, 0, 1, 1, 1)

            self.bootstrapValue = HoverLabel("Bootstrap threshold", "Bootstrap value hovering", self.textEdit, HoverLabel.image_label, "../img/settings/bootstrap.jpg")
            font.setPointSize(8)
            self.bootstrapValue.setFont(font)
            self.bootstrapValue.setIndent(10)
            self.bootstrapValue.setObjectName("bootstrapValue")
            self.gridLayout_4.addWidget(self.bootstrapValue, 0, 0, 1, 1)

            self.spinBox_metricThreshold = QtWidgets.QSpinBox(self.thresholdBox)
            font.setPointSize(8)
            self.spinBox_metricThreshold.setFont(font)
            self.spinBox_metricThreshold.setProperty("value", 60)
            self.spinBox_metricThreshold.setObjectName("spinBox_metricThreshold")
            self.gridLayout_4.addWidget(self.spinBox_metricThreshold, 6, 1, 1, 1)

            self.metricThreshold = HoverLabel("Metric threshold", "Metric threshold hovering", self.textEdit, HoverLabel.image_label, "../img/active/sequence.svg")
            font.setPointSize(8)
            self.metricThreshold.setFont(font)
            self.metricThreshold.setIndent(10)
            self.metricThreshold.setObjectName("metricThreshold")
            self.gridLayout_4.addWidget(self.metricThreshold, 6, 0, 1, 1)
            self.verticalLayout.addWidget(self.thresholdBox)
            self.gridLayout_2.addLayout(self.verticalLayout, 5, 0, 1, 1)

            self.comboBox_metrics.setProperty("value", Params.distance_method)
            self.spinBox_metricThreshold.setProperty("value", Params.dist_threshold)
            self.spinBox_bootstrap.setProperty("value", Params.bootstrap_threshold)

            self.ok_button.clicked.connect(self.saveData)
            self.ok_button.clicked.connect(Dialog.close)
            self.cancel_button.clicked.connect(Dialog.close)
            self.reset_button.clicked.connect(self.resetValues)

            self.retranslateUi(Dialog)
            QtCore.QMetaObject.connectSlotsByName(Dialog)

        def retranslateUi(self, Dialog):
            _translate = QtCore.QCoreApplication.translate
            Dialog.setWindowTitle(_translate("Dialog", "Parameters"))
            self.cancel_button.setText(_translate("Dialog", "Cancel"))
            self.reset_button.setText(_translate("Dialog", "Reset"))
            self.ok_button.setText(_translate("Dialog", "OK"))
            self.userParams.setTitle(_translate("Dialog", "User Parameters"))
            self.methodBox.setTitle(_translate("Dialog", "Method Selection"))
            self.metrics.setText(_translate("Dialog", "Calculus method"))
            self.comboBox_metrics.setItemText(0, _translate("Dialog", "Least square"))
            self.comboBox_metrics.setItemText(1, _translate("Dialog", "Robinson and Foulds"))
            self.comboBox_metrics.setItemText(2, _translate("Dialog", "Euclidean distance"))
            self.thresholdBox.setTitle(_translate("Dialog", "Threshold Selection"))
            self.bootstrapValue.setText(_translate("Dialog", "Bootstrap threshold"))
            self.metricThreshold.setText(_translate("Dialog", "Metric threshold"))
            self.paramsDetails.setTitle(_translate("Dialog", "Details"))
            self.textEdit.setPlaceholderText(_translate("Dialog", "Hover over the parameter you want details about..."))

        def saveData(self):
            metrics = self.comboBox_metrics.currentIndex()
            bootstrap_value = self.spinBox_bootstrap.value()
            metric_threshold = self.spinBox_metricThreshold.value()

            update_yaml_param(Params, "params.yaml", "distance_method", metrics)
            update_yaml_param(Params, "params.yaml", "bootstrap_threshold", bootstrap_value)
            update_yaml_param(Params, "params.yaml", "dist_threshold", metric_threshold)

        def resetValues(self):
            self.comboBox_metrics.setProperty("value", Params2.distance_method)
            self.spinBox_metricThreshold.setProperty("value", Params2.dist_threshold)
            self.spinBox_bootstrap.setProperty("value", Params2.bootstrap_threshold)

    def comboBoxSelected(self, index):
        if index != 0:
            HoverLabel.Settings.selected_index = index


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = HoverLabel.Settings()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())